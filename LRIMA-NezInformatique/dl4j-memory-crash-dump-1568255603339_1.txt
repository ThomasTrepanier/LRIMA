Deeplearning4j OOM Exception Encountered for MultiLayerNetwork
Timestamp:                              2019-09-11 22:33:23.339
Thread ID                               1
Thread Name                             main


Stack Trace:
java.lang.OutOfMemoryError: Physical memory usage is too high: physicalBytes (8521M) > maxPhysicalBytes (8160M)
	at org.bytedeco.javacpp.Pointer.deallocator(Pointer.java:585)
	at org.bytedeco.javacpp.Pointer.init(Pointer.java:125)
	at org.nd4j.nativeblas.Nd4jCpu$Context.allocate(Native Method)
	at org.nd4j.nativeblas.Nd4jCpu$Context.<init>(Nd4jCpu.java:6106)
	at org.nd4j.linalg.cpu.nativecpu.ops.CpuOpContext.<init>(CpuOpContext.java:36)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.buildContext(NativeOpExecutioner.java:2029)
	at org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.exec(NativeOpExecutioner.java:1620)
	at org.nd4j.linalg.factory.Nd4j.exec(Nd4j.java:7259)
	at org.deeplearning4j.nn.layers.mkldnn.MKLDNNSubsamplingHelper.backpropGradient(MKLDNNSubsamplingHelper.java:99)
	at org.deeplearning4j.nn.layers.convolution.subsampling.SubsamplingLayer.backpropGradient(SubsamplingLayer.java:143)
	at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.calcBackpropGradients(MultiLayerNetwork.java:1898)
	at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.computeGradientAndScore(MultiLayerNetwork.java:2684)
	at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.computeGradientAndScore(MultiLayerNetwork.java:2627)
	at org.deeplearning4j.optimize.solvers.BaseOptimizer.gradientAndScore(BaseOptimizer.java:160)
	at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:63)
	at org.deeplearning4j.optimize.Solver.optimize(Solver.java:52)
	at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fitHelper(MultiLayerNetwork.java:2231)
	at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:2189)
	at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:2252)
	at deeplearning4j.ModelUtils.trainModel(ModelUtils.java:13)
	at deeplearning4j.ConvolutionnalNetwork.main(ConvolutionnalNetwork.java:79)


========== Memory Information ==========
----- Version Information -----
Deeplearning4j Version                  1.0.0-beta4
Deeplearning4j CUDA                     <not present>

----- System Information -----
Operating System                        Microsoft Windows 10
CPU                                     Intel(R) Core(TM) i5-9600K CPU @ 3.70GHz
CPU Cores - Physical                    6
CPU Cores - Logical                     6
Total System Memory                      15,94 GiB (17110974464)

----- ND4J Environment Information -----
Data Type                               FLOAT
blas.vendor                             MKL
os                                      Windows 10
backend                                 CPU

----- Memory Configuration -----
JVM Memory: XMX                           3,98 GiB (4278190080)
JVM Memory: current                      40,00 MiB (41943040)
JavaCPP Memory: Max Bytes                 3,98 GiB (4278190080)
JavaCPP Memory: Max Physical              7,97 GiB (8556380160)
JavaCPP Memory: Current Bytes           267,22 MiB (280199613)
JavaCPP Memory: Current Physical          6,53 GiB (7012753408)
Periodic GC Enabled                     false

----- Workspace Information -----
Workspaces: # for current thread        4
Current thread workspaces:
  Name                      State       Size                          # Cycles            
  WS_LAYER_WORKING_MEM      CLOSED           ,00 B                    10                  
  WS_ALL_LAYERS_ACT         CLOSED        1,52 GiB (1627255980)       1                   
  WS_LAYER_ACT_2            CLOSED           ,00 B                    3                   
  WS_LAYER_ACT_1            CLOSED           ,00 B                    2                   
Workspaces total size                     1,52 GiB (1627255980)

----- Network Information -----
Network # Parameters                    12128072
Parameter Memory                         46,26 MiB (48512288)
Parameter Gradients Memory               46,26 MiB (48512288)
Updater Number of Elements              12128072
Updater Memory                           46,26 MiB (48512288)
Updater Classes:
  org.nd4j.linalg.learning.NesterovsUpdater
Params + Gradient + Updater Memory       92,53 MiB (97024576)
Iteration Count                         0
Epoch Count                             0
Backprop Type                           Standard
Workspace Mode: Training                ENABLED
Workspace Mode: Inference               ENABLED
Number of Layers                        6
Layer Counts
  ConvolutionLayer                        2
  DenseLayer                              1
  OutputLayer                             1
  SubsamplingLayer                        2
Layer Parameter Breakdown
  Idx Name                 Layer Type           Layer # Parameters   Layer Parameter Memory
  0   layer0               ConvolutionLayer     1520                   5,94 KiB (6080)   
  1   layer1               SubsamplingLayer     0                         ,00 B          
  2   layer2               ConvolutionLayer     25050                 97,85 KiB (100200) 
  3   layer3               SubsamplingLayer     0                         ,00 B          
  4   layer4               DenseLayer           12100500              46,16 MiB (48402000)
  5   layer5               OutputLayer          1002                   3,91 KiB (4008)   

----- Layer Helpers - Memory Use -----
Total Helper Count                      4
Helper Count w/ Memory                  0
Total Helper Persistent Memory Use           ,00 B

----- Network Activations: Inferred Activation Shapes -----
Current Minibatch Size                  1101
Input Shape                             [1101, 30000]
Idx Name                 Layer Type           Activations Type                           Activations Shape    # Elements   Memory      
0   layer0               ConvolutionLayer     InputTypeConvolutional(h=96,w=96,c=20)     [1101, 20, 96, 96]   202936320    774,14 MiB (811745280)
1   layer1               SubsamplingLayer     InputTypeConvolutional(h=48,w=48,c=20)     [1101, 20, 48, 48]   50734080     193,54 MiB (202936320)
2   layer2               ConvolutionLayer     InputTypeConvolutional(h=44,w=44,c=50)     [1101, 50, 44, 44]   106576800    406,56 MiB (426307200)
3   layer3               SubsamplingLayer     InputTypeConvolutional(h=22,w=22,c=50)     [1101, 50, 22, 22]   26644200     101,64 MiB (106576800)
4   layer4               DenseLayer           InputTypeFeedForward(500)                  [1101, 500]          550500         2,10 MiB (2202000)
5   layer5               OutputLayer          InputTypeFeedForward(2)                    [1101, 2]            2202           8,60 KiB (8808)
Total Activations Memory                  1,44 GiB (1549776408)
Total Activations Memory (per ex)         1,34 MiB (1407608)
Total Activation Gradient Mem.            1,57 GiB (1681887600)
Total Activation Gradient Mem. (per ex)   1,46 MiB (1527600)

----- Network Training Listeners -----
Number of Listeners                     1
Listener 0                              ScoreIterationListener(10)
